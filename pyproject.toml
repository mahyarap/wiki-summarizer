[project]
name = "wiki-summarizer"
version = "0.1.0"
description = "An AI agent that summarizes Wikipedia topics via FastAPI"
authors = [{ name = "Your Name" }]
requires-python = ">=3.12"
dependencies = [
    "fastapi ~=0.116.0",
    "uvicorn ~=0.35.0",
    "langchain ~=0.3.0",
    "langchain-community ~=0.3.0",
    "langchain-openai ~=0.3.0",
    "openai ~=1.98.0",
    "wikipedia ~=1.4.0",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pyright",
    "pytest",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle (style issues)
    "F",    # pyflakes (error detection)
    "I",    # isort (import sorting)
    "B",    # flake8-bugbear (likely bugs and design issues)
    "UP",   # pyupgrade (modern Python features)
    "SIM",  # flake8-simplify (simplifiable code)
    "C4",   # flake8-comprehensions
    "N",    # pep8-naming (naming conventions)
    "ERA",  # eradicate (removes commented-out code)
    "PL",   # pylint (subset: helpful suggestions)
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D203",    # Conflicts with D211 (docstring formatting)
    "D213",    # Docstring should start on the second line
    "PLR0913", # Too many arguments in function definition
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
# Allow asserts, complex signatures, and missing doc/type hints in tests
"tests/*" = ["S101", "PLR0913", "D", "ANN"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[tool.pyright]
include = ["app", "tests"]
strict = ["app", "tests"]
venvPath = "."
venv = ".venv"
reportMissingImports = true
reportUnusedVariable = true
pythonVersion = "3.12"

[tool.pytest.ini_options]
python_files = ["tests/test_*.py"]
addopts = "-m 'not functional'"
markers = [
    "functional: marks tests that require external APIs"
]
